apiVersion: addonmgr.keikoproj.io/v1alpha1
kind: Addon
metadata:
  name: cluster-autoscaler
  namespace: addon-manager-system
spec:
  pkgChannel: cluster-autoscaler
  pkgName: cluster-autoscaler-addon
  pkgVersion: v0.1
  pkgType: composite
  pkgDescription: "cluster-autoscaler"
  params:
    namespace: addon-cluster-autoscaler-ns
    context:
      clusterName: "my-example.cluster.k8s.local"
      clusterRegion: us-west-2
  lifecycle:
    prereqs:
      template: |
        apiVersion: argoproj.io/v1alpha1
        kind: Workflow
        spec:
          entrypoint: entry
          serviceAccountName: addon-manager-workflow-installer-sa
          templates:
          - name: entry
            steps:
            - - name: prereq-resources
                template: submit
                arguments:
                  artifacts:
                  - name: doc
                    path: /tmp/doc
                    raw:
                      data: |
                        apiVersion: v1
                        kind: Namespace
                        metadata:
                          name: "{{workflow.parameters.namespace}}"
                        ---
                        apiVersion: v1
                        kind: ServiceAccount
                        metadata:
                          labels:
                            k8s-addon: cluster-autoscaler.addons.k8s.io
                            k8s-app: cluster-autoscaler
                          name: cluster-autoscaler
                          namespace: "{{workflow.parameters.namespace}}"
                        ---
                        apiVersion: rbac.authorization.k8s.io/v1beta1
                        kind: ClusterRole
                        metadata:
                          name: cluster-autoscaler
                          labels:
                            k8s-addon: cluster-autoscaler.addons.k8s.io
                            k8s-app: cluster-autoscaler
                        rules:
                        - apiGroups: [""]
                          resources: ["events","endpoints"]
                          verbs: ["create", "patch"]
                        - apiGroups: [""]
                          resources: ["pods/eviction"]
                          verbs: ["create"]
                        - apiGroups: [""]
                          resources: ["pods/status"]
                          verbs: ["update"]
                        - apiGroups: [""]
                          resources: ["endpoints"]
                          resourceNames: ["cluster-autoscaler"]
                          verbs: ["get","update"]
                        - apiGroups: [""]
                          resources: ["nodes"]
                          verbs: ["watch","list","get","update"]
                        - apiGroups: [""]
                          resources: ["pods","services","replicationcontrollers","persistentvolumeclaims","persistentvolumes"]
                          verbs: ["watch","list","get"]
                        - apiGroups: ["extensions"]
                          resources: ["replicasets","daemonsets"]
                          verbs: ["watch","list","get"]
                        - apiGroups: ["policy"]
                          resources: ["poddisruptionbudgets"]
                          verbs: ["watch","list"]
                        - apiGroups: ["apps"]
                          resources: ["statefulsets", "replicasets"]
                          verbs: ["watch","list","get"]
                        - apiGroups: ["storage.k8s.io"]
                          resources: ["storageclasses"]
                          verbs: ["watch","list","get"]
                        ---
                        apiVersion: rbac.authorization.k8s.io/v1
                        kind: Role
                        metadata:
                          name: cluster-autoscaler
                          namespace: "{{workflow.parameters.namespace}}"
                          labels:
                            k8s-addon: cluster-autoscaler.addons.k8s.io
                            k8s-app: cluster-autoscaler
                        rules:
                        - apiGroups: [""]
                          resources: ["configmaps"]
                          verbs: ["create"]
                        - apiGroups: [""]
                          resources: ["configmaps"]
                          resourceNames: ["cluster-autoscaler-status"]
                          verbs: ["delete","get","update"]
                        ---
                        apiVersion: rbac.authorization.k8s.io/v1
                        kind: ClusterRoleBinding
                        metadata:
                          name: cluster-autoscaler
                          labels:
                            k8s-addon: cluster-autoscaler.addons.k8s.io
                            k8s-app: cluster-autoscaler
                        roleRef:
                          apiGroup: rbac.authorization.k8s.io
                          kind: ClusterRole
                          name: cluster-autoscaler
                        subjects:
                          - kind: ServiceAccount
                            name: cluster-autoscaler
                            namespace: "{{workflow.parameters.namespace}}"

                        ---
                        apiVersion: rbac.authorization.k8s.io/v1
                        kind: RoleBinding
                        metadata:
                          name: cluster-autoscaler
                          namespace: "{{workflow.parameters.namespace}}"
                          labels:
                            k8s-addon: cluster-autoscaler.addons.k8s.io
                            k8s-app: cluster-autoscaler
                        roleRef:
                          apiGroup: rbac.authorization.k8s.io
                          kind: Role
                          name: cluster-autoscaler
                        subjects:
                          - kind: ServiceAccount
                            name: cluster-autoscaler
                            namespace: "{{workflow.parameters.namespace}}"
          - name: submit
            inputs:
              artifacts:
                - name: doc
                  path: /tmp/doc
            container:
              image: expert360/kubectl-awscli:v1.11.2
              command: [sh, -c]
              args: ["kubectl apply -f /tmp/doc"]
    install:
      template: |
        apiVersion: argoproj.io/v1alpha1
        kind: Workflow
        metadata:
          generateName: install-cluster-autoscaler-
        spec:
          entrypoint: entry
          serviceAccountName: addon-manager-workflow-installer-sa
          templates:
          - name: entry
            steps:
            - - name: prereq-resources
                template: submit
                arguments:
                  artifacts:
                  - name: doc
                    path: /tmp/doc
                    raw:
                      data: |
                        apiVersion: apps/v1
                        kind: Deployment
                        metadata:
                          name: cluster-autoscaler
                          namespace: "{{workflow.parameters.namespace}}"
                          labels:
                            app: cluster-autoscaler
                        spec:
                          replicas: 1
                          selector:
                            matchLabels:
                              app: cluster-autoscaler
                          template:
                            metadata:
                              labels:
                                app: cluster-autoscaler
                            spec:
                              serviceAccountName: cluster-autoscaler
                              containers:
                                - image: k8s.gcr.io/cluster-autoscaler:v1.12.3
                                  name: cluster-autoscaler
                                  resources:
                                    limits:
                                      cpu: 100m
                                      memory: 300Mi
                                    requests:
                                      cpu: 100m
                                      memory: 300Mi
                                  command:
                                    - ./cluster-autoscaler
                                    - --v=4
                                    - --stderrthreshold=info
                                    - --cloud-provider=aws
                                    - --skip-nodes-with-local-storage=false
                                    - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,kubernetes.io/cluster/{{workflow.parameters.clusterName}}
                                    - --scan-interval=10s
                                    - --expander=least-waste
                                    - --logtostderr
                                    - --estimator=binpacking
                                    - --max-graceful-termination-sec=600
                                    - --max-node-provision-time=15m0s
                                    - --scale-down-delay-after-add=10m0s
                                    - --scale-down-delay-after-delete=10s
                                    - --scale-down-utilization-threshold=0.5
                                  env:
                                    - name: AWS_REGION
                                      value: "{{workflow.parameters.clusterRegion}}"
                                  volumeMounts:
                                    - name: ssl-certs
                                      mountPath: /etc/ssl/certs/ca-certificates.crt
                                      readOnly: true
                                  imagePullPolicy: "Always"
                              volumes:
                                - name: ssl-certs
                                  hostPath:
                                    path: "/etc/ssl/certs/ca-bundle.crt"
          - name: submit
            inputs:
              artifacts:
                - name: doc
                  path: /tmp/doc
            container:
              image: expert360/kubectl-awscli:v1.11.2
              command: [sh, -c]
              args: ["kubectl apply -f /tmp/doc"]
    delete:
      template: |
        apiVersion: argoproj.io/v1alpha1
        kind: Workflow
        spec:
          entrypoint: delete-wf
          serviceAccountName: addon-manager-workflow-installer-sa

          templates:
            - name: delete-wf
              steps:
                - - name: delete-ns
                    template: delete-ns

            - name: delete-ns
              container:
                image: expert360/kubectl-awscli:v1.11.2
                command: [sh, -c]
                args: ["kubectl delete all -n {{workflow.parameters.namespace}} --all"]
